{% macro make_obj_list(list) %}
  {% for (key, val) in list +%}
    "{{+ key +}}": "{{+ val +}}" {% if !loop.last %}, {%+ endif ~%}
  {% endfor +%}
{% endmacro %}

{% macro make_array(name, list) %}
  "{{ name }}": [
  {% for val in list +%}
    "{{+ val +}}" {% if !loop.last %}, {%+ endif ~%}
  {% endfor +%}
  ],
{% endmacro %}

{% macro make_optional_obj(name, optional_list) %}
  {% if let Some(list) = optional_list +%}
  "{{ name }}": {
    {% call make_obj_list(list) +%}
  },
  {% endif +%}
{% endmacro %}

{% macro optional_comma(condition) %}
{% if condition %}, {% endif %}
{% endmacro %}

{
  "name": "{{ package_name }}",
  "private": true,
  "version": "0.1.0",
  "type": "module",
  {% if let Some(Description::Data(description)) = self.description +%}
  "description": "{{ description }}",
  {% endif +%}
  {% if let Some(workspaces) = self.workspaces +%}
  {%+ call make_array("workspaces", workspaces) +%}
  {% endif +%}
  "scripts": {
  {% call make_obj_list(self.scripts) +%}
  },
  {% if let License::Data(license) = self.license +%}
  "license": "{{ license }}",
  {% endif +%}
  {% if let Homepage::Data(homepage) = self.homepage +%}
  "homepage": "{{ homepage }}",
  {% endif +%}
  {% if let Keywords::Data(keywords) = self.keywords +%}
  {%+ call make_array("keywords", keywords) +%}
  {% endif +%}
  {{+ self.repository +}}
  {% if let Files::Data(files) = self.files +%}
  {%+ call make_array("files", files) +%}
  {% endif +%} 
  {% if let Some(Browser::Data(browser)) = self.browser +%}
  "browser": "{{+ browser }}",
  {% else if let Main::Data(main) = self.main +%}
  "main": "{{+ main }}",
  {% endif +%}
  {% if let Exports::Data(exports) = self.exports +%}
  "exports": {
    {% for (key, val) in exports %}
    {% filter indent(2) +%}
  "{{ key }}": {{+ val.render()? }}
    {% endfilter %}
    {% endfor +%}
  },
  {% if let Some(man) = self.man +%}
  {{+ man }}
  {% endif +%}
  {% endif +%}
  {% if let Some(Bugs::Data(data)) = self.bugs +%}
  "bugs": {
    {% if let Some(url) = data.url +%}
    "url": "{{ url }}" {% call optional_comma(data.email.is_some()) +%}
    {% endif +%}
    {% if let Some(email) = data.email +%}
    "email": "{{ email }}"
    {% endif +%}
  },
  {% endif +%}
  {% if let Author::Data(author) = self.author +%}
  "author": {
    {{+ author | indent(2) +}}
  },
  {% endif +%}
  {% if let Some(contributors) = self.contributors +%}
  "contributors": [
    {% for contributor in contributors %}
    {% if let Contributor::Data(person) = contributor +%}
    {
      {{+ person | indent(4) +}} 
    }{% call optional_comma(!loop.last) +%}
    {% endif %}
    {% endfor +%}
  ],
  {% endif +%}
  {% if let Some(maintainers) = self.maintainers +%}
  "maintainers": [
    {% for maintainer in maintainers %}
    {% if let Contributor::Data(person) = maintainer +%}
    {
      {{+ person | indent(4) +}} 
    }{% call optional_comma(!loop.last) +%}
    {% endif %}
    {% endfor +%}
  ],
  {% endif +%}
  {% if let Some(config) = self.config +%}
  "config": {
  {% for (key, val) in config +%}
    "{{ key }}": {{+ crate::render_json_val(val, 2) }} {% call optional_comma(!loop.last) %}
  {% endfor +%}
  },
  {% endif +%}
  {% call make_optional_obj("peerDependencies", self.peer_dependencies ) +%}
  {% call make_optional_obj("optionalDependencies", self.optional_dependencies ) +%}
  {% call make_optional_obj("bundleDependencies", self.bundle_dependencies ) +%}
  {% if let Some(publish_config) = self.publish_config +%}
  "publishConfig": {
    {{+ publish_config | indent(4) +}}
  }, 
  {% endif +%}
  {% for (name, data) in metadata +%} 
  "{{ name }}": {{+ self::render_json_val(data, 1) }},
  {% endfor +%}
  {% if let Engines::Data(engines) = self.engines +%}
  "engines": {
    {% call make_obj_list(engines) +%}
  },
  {% endif +%}
  {% if let Os::Data(os) = self.os +%}
  {%+ call make_array("os", os) +%}
  {% endif +%}
  {% if let Cpu::Data(cpu) = self.cpu +%}
  {%+ call make_array("cpu", cpu) +%}
  {% endif +%}
  {% if let PackageManagerJson::Data(package_manager) = self.package_manager +%}
  "packageManager": "{{ package_manager }}",
  {% endif +%}
  "devDependencies": {
  {% call make_obj_list(self.dev_dependencies) +%}
  },
  "dependencies": {
  {% call make_obj_list(self.dependencies) +%}
  }
}
